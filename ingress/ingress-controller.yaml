
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  labels:
    k8s-app: default-http-backend
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: default-http-backend
          # Any image is permissable as long as:
          # 1. It serves a 404 page at /
          # 2. It serves 200 on a /healthz endpoint
          image: gcr.akscn.io/google_containers/defaultbackend:1.0
          livenessProbe:
            httpGet:
              path: /healthz   # 这个URI是 nginx-ingress-controller中nginx里配置好的localtion
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30   # 30s检测一次/healthz
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
---
apiVersion: v1
kind: Service     #为default backend 创建一个service
metadata:
  name: default-http-backend
  namespace: kube-system
  labels:
    k8s-app: default-http-backend
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    k8s-app: default-http-backend

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
    spec:
      # hostNetwork makes it possible to use ipv6 and to preserve the source IP correctly regardless of docker configuration
      # however, it is not a hard dependency of the nginx-ingress-controller itself and it may cause issues if port 10254 already is taken on the host
      # that said, since hostPort is broken on CNI (https://github.com/kubernetes/kubernetes/issues/31307) we have to use hostNetwork where CNI is used
      # like with kubeadm
      # hostNetwork: true # 注释表示不使用宿主机的80口，
      terminationGracePeriodSeconds: 60
      hostNetwork: true  # 表示容器使用和宿主机一样的网络
      serviceAccountName: nginx-ingress-serviceaccount # 引用前面创建的serviceacount
      containers:
        - name: nginx-ingress-controller  #容器名
#          image: docker.io/cdchen/nginx-ingress-controller:0.9.0-beta.12      # 容器使用的镜像
          image: gcr.akscn.io/google_containers/nginx-ingress-controller:0.9.0-beta.11
          readinessProbe:   #启动这个服务时要验证/healthz 端口10254会在运行的node上监听。
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10  # 每隔10做健康检查
            timeoutSeconds: 1
          ports:
            - containerPort: 80
              hostPort: 80    # 80映射到80
            - containerPort: 443
              hostPort: 443
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
          #- --default-ssl-certificate=$(POD_NAMESPACE)/ingress-secret    # 这是启用Https时用的,这样所有的域名都配置里HTTPS